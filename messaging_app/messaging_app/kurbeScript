#!/usr/bin/env bash
# kurbeScript
# Script to set up and verify a local Kubernetes cluster in a GitHub or Docker-based environment using kind

set -e

echo "ðŸš€ Setting up Kubernetes cluster using kind (Kubernetes in Docker)..."

# Check if kind is installed
if ! command -v kind &> /dev/null
then
    echo "ðŸ“¦ Installing kind..."
    curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
    chmod +x ./kind
    sudo mv ./kind /usr/local/bin/kind
else
    echo "kind already installed."
fi

# Check if kubectl is installed
if ! command -v kubectl &> /dev/null
then
    echo " Installing kubectl..."
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    sudo mv kubectl /usr/local/bin/
else
    echo " kubectl already installed."
fi

# Create a kind cluster if it doesnâ€™t exist
if kind get clusters | grep -q "messaging-cluster"; then
    echo "  Cluster 'messaging-cluster' already exists."
else
    echo " Creating a new kind cluster named 'messaging-cluster'..."
    kind create cluster --name messaging-cluster
fi

# Verify cluster info
echo " Verifying cluster info..."
kubectl cluster-info

# Retrieve pods (there will be none yet)
echo " Listing all pods..."
kubectl get pods -A || echo "No pods found yet â€” cluster is running but empty."

echo " Kubernetes (kind) cluster setup complete!"
